apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcphub.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mcphub.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mcphub.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mcphub.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: config-copy
          image: busybox:1.36
          command: ["/bin/sh", "-c"]
          args:
            - cp /configsrc/mcp_settings.json /mcp_settings/mcp_settings.json
          volumeMounts:
            - name: mcp-config
              mountPath: /configsrc
            - name: mcp-settings
              mountPath: /mcp_settings
      containers:
        - name: mcphub
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - node
            - dist/index.js
          args:
            - --config=/mcp_settings/mcp_settings.json
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          volumeMounts:
            - name: mcp-settings
              mountPath: /mcp_settings
            - name: mcp-settings
              mountPath: /app/mcp_settings.json
              subPath: mcp_settings.json
      volumes:
        - name: mcp-settings
          persistentVolumeClaim:
            claimName: '{{ include "mcphub.fullname" . }}-settings-pvc'
        - name: mcp-config
          configMap:
            name: '{{ include "mcphub.fullname" . }}-config'